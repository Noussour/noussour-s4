# Chapitre 2 : MLD (modele logique de donnees : Modeles relationnel)

modele : ensemble doutils utilises pour decrire et manipuler des donnees
modele logique : une representation du systeme tel qu'il sera implemente dans les ordis(modele relationnel) != mcd != implementation physique (Access ou oracle)
    Domaine ---->(representer) MCD -----> (traduit) MLD ------>(implementer) MPD

## Modele relationnel : (creee par CODD IBM 69/70)(base de plupart de SGBD)(langage d'interrogation et de requete simple)(relation ou table pour decrire les donnees et les liens)(defini par notion d'ensemble)

MCD ---> MLD Relationnel :

            *Entites et certaines associations de viennent de raltions (tables) : (sous ensemble de produit cartesien du n domaines d'attribut)(caracterisee par : nom,champs(colonnes),n-uples (tuples) correspondent aux combinaisons valide (ligne) ; R(A1:D1,A2:D2,.....) ou R est le nom de la relation

            *proprietes deviennent des attributs (champs)
            *des cles etrangers indispensables aux relations (liens) entre les donnees

            -degree d'une relation/Ordre/Arite : nombre d'attribut /colonnes
            -(pas de ligne edentique)(ordre des ligne et colonnes non important)(chaque case contient qu'une seule valeur)
            -pour identifier la ligne la relation doit avoir une cle(groupe d'attribut minimal qui determine un tuple de maniere unique dans une relation)

## BDD Relationnel : le shema est un ensemble de relation et les occurences sont les tuples des relations
## SGBDR : logiciel supportant le modele relation, avec des manipulation avec des opperateurs relationnels

## Cle primaire(irreductible+unique+non nulle) : Simple(un attribut) / composee (plusieurs attributs)
                 *cle candidate(un attribut dans la relation)
                 *#cle etrangers (attribut dans une relation et cle dans une autre)
                 *cle referentielle (permet de faire le lien entre relation)

## MCD en Relation a parir des cardinalite :
                A x,n - x,1 B : la cle de l'entite de x,n (A) devient une cle etrangers dans l'entite x,1 (B)

                x,n -x,n : une relation supplementaire avec cle composee etrangers des deux cles des entite

                A 0,1 - 1,1 B : cles primaire de A devient etrangers dans B

                0,1 - 0,1 : la cles d'une devient etrangers dans une autre

## Contraintes d'integrite : -assertion(condition) doit etre vrai tout la vie de la bdd ; limite les possibilites des valeurs affecter aux champs ,executer a chaque mise a jour de la bdd , la bdd est dites coherente si toutes les Contraintes d'integrite sont verifirees
                    {integrite de cle / de domaine(type)/ reference}
                    -cle : doit exister, unique et non nulle dans chaque relation
                    -domaine : tout attribut appartient a un domainefini ou non fini
                    -reference (concerne les cles etrangers) : tout tupe d'une relation faisant reference a une autre relation doit se refere a un tuple existant (tuple reference dega saisi das la table referencee)

## Normalisation (norma=regle): pour construire un shema de bdd coherent en evitont les anomalies transactionnelles d'une mauvaise modelisation (anomalie de lecture/d'ecriture + redondance et contre performance) (minimisation d'espace de stockage) (ameliore la modelisation)

                *anomalie de modification : une mise a jour d'un attribut doit se faire pour l'ensemble des tuple
                *anomalie d'insertion: l'ajout d'un attribut doit se suivre par l'ajout des attribut concernont les tuple dont l'attribut appartient
                *anomalie de suppression: une suppression d'un attribut se suit par la suppression de tous les attribut de son tuple

        -Le modele relationnel est dit normaliser si il respecte les formes normales(qui s'appuit sur les dependances fonctionnelles entre attributs)

        -Deux rubriques(colonnes) sont en Dependance fonctionnelles si Connaitre la valeur d'une permet de connaitre la valeur de l'autre
                    R1 -> R2 : R1 est la source de la DF et R2 est le but ;
                    numFacture, code produit -> quantite facturee (DFPGC) dependances fonctionnelles a partie gauche composee

        ### type de dependances:

        -Une df est elementaire R1->R2 s'il n'existe pas une R3, sous ensemble de R1 qui assrue R3 -> R2
                    (Num facture,reference article) -> nom article ; n'est pas fonc car Num facture n'a rien a avoir avec nom article
        -Une df est directe R1 -> R2 s'in n'existe pas une R3(ou collection de rubriques) qui engendrait une df transitive de sorte que :
                    R1 -> R3 -> R2

        ### Graphe de dependances fonctionnelles : R1 -> R2 en graphe orientee

        ### 1FN : une relation ayant une cle dont les attributs possedent tous une valeur semantiquement atomique (aucune subdivision de l'info initiale n'apporte une infos supplementaire ou complmentaire)
            -Normalisation en 1F : l'attribut non attomique doit etre decompose en ses different attributs atomique, par exemple le prenom (un etudiant peut avoir plusieurs prenoms) pour ca il faut ajouter une relation PRENOM qui contient les different prenoms .

        ### 2FN : une relation est en 2fn si elle est en 1fn et chacun des attributs ne faisant pas partie de la cle primaire est en dependance fencotionnelle elementaire avec la cle primaire (une relation 1fn avec un attribue en cle primaire est 2fn) (le prblm se pose seulement avec les tables a cle primaire compose)
            -Normalisation en 2F : (Decomposer la relation initiale en plusieurs nouvelle relation de nombre lie au DF non elementaire)
                en pose le nom de la relation X (en la divise par DF elementaire en relation) puis en choisi les noms adeqoit







